{"ast":null,"code":"import NFTContractBuild from 'contracts/NFT.json';\nimport Web3 from 'web3';\nimport RequestContractBuild from 'contracts/RequestManager.json';\nlet selectedAccount;\nlet nftContract;\nlet erc20Contract;\nlet requestContract;\nlet isInitialized = false;\nexport const init = async () => {\n  let provider = window.ethereum;\n\n  if (typeof provider !== 'undefined') {\n    provider.request({\n      method: 'eth_requestAccounts'\n    }).then(accounts => {\n      selectedAccount = accounts[0];\n      console.log(`Selected account is ${selectedAccount}`);\n    }).catch(err => {\n      console.log(err);\n      return;\n    });\n    window.ethereum.on('accountsChanged', function (accounts) {\n      selectedAccount = accounts[0];\n      console.log(`Selected account changed to ${selectedAccount}`);\n    });\n  }\n\n  const web3 = new Web3(provider);\n  const networkId = await web3.eth.net.getId(); // nftContract = new web3.eth.Contract(\n  // \tNFTContractBuild.abi,\n  // \tNFTContractBuild.networks[networkId].address\n  // );\n\n  const erc20Abi = [{\n    constant: true,\n    inputs: [{\n      name: '_owner',\n      type: 'address'\n    }],\n    name: 'balanceOf',\n    outputs: [{\n      name: 'balance',\n      type: 'uint256'\n    }],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function'\n  }];\n  const requestabi = [{\n    inputs: [{\n      \"internalType\": \"string\",\n      \"name\": \"_gameID\",\n      \"type\": \"string\"\n    }, {\n      \"internalType\": \"uint256\",\n      \"name\": \"_amount\",\n      \"type\": \"uint256\"\n    }],\n    name: \"requestMint\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }];\n  erc20Contract = new web3.eth.Contract(erc20Abi, // Dai contract on Rinkeby\n  '0x5592ec0cfb4dbc12d3ab100b257153436a1f0fea');\n  requestContract = new web3.eth.Contract(requestabi, '0xa2dcf71C4a85EBA1d62eAc9EBfFC610291b80f37');\n  isInitialized = true;\n};\nexport const getOwnBalance = async () => {\n  if (!isInitialized) {\n    await init();\n  }\n\n  return erc20Contract.methods.balanceOf(selectedAccount).call().then(balance => {\n    return Web3.utils.fromWei(balance);\n  });\n};\nexport const mintToken = async () => {\n  if (!isInitialized) {\n    await init();\n  }\n\n  return nftContract.methods.mint(selectedAccount).send({\n    from: selectedAccount\n  });\n};\nexport const requestMint = async () => {\n  if (!isInitialized) {\n    await init();\n  }\n\n  return requestContract.methods.requestMint(\"bbb\", 10).send({\n    from: selectedAccount\n  });\n};\nexport const requestMint2 = async (gameID, amount) => {\n  if (!isInitialized) {\n    await init();\n  }\n\n  return requestContract.methods.requestMint(gameID, amount).send({\n    from: selectedAccount\n  });\n};","map":{"version":3,"names":["NFTContractBuild","Web3","RequestContractBuild","selectedAccount","nftContract","erc20Contract","requestContract","isInitialized","init","provider","window","ethereum","request","method","then","accounts","console","log","catch","err","on","web3","networkId","eth","net","getId","erc20Abi","constant","inputs","name","type","outputs","payable","stateMutability","requestabi","Contract","getOwnBalance","methods","balanceOf","call","balance","utils","fromWei","mintToken","mint","send","from","requestMint","requestMint2","gameID","amount"],"sources":["/Users/bagdongho/Desktop/web3-tutorials/WEB3-TUTORIAL/src/Web3Client.js"],"sourcesContent":["import NFTContractBuild from 'contracts/NFT.json';\nimport Web3 from 'web3';\nimport RequestContractBuild from 'contracts/RequestManager.json';\n\n\nlet selectedAccount;\n\nlet nftContract;\nlet erc20Contract;\nlet requestContract;\n\nlet isInitialized = false;\n\nexport const init = async () => {\n\tlet provider = window.ethereum;\n\n\tif (typeof provider !== 'undefined') {\n\t\tprovider\n\t\t\t.request({ method: 'eth_requestAccounts' })\n\t\t\t.then((accounts) => {\n\t\t\t\tselectedAccount = accounts[0];\n\t\t\t\tconsole.log(`Selected account is ${selectedAccount}`);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn;\n\t\t\t});\n\n\t\twindow.ethereum.on('accountsChanged', function (accounts) {\n\t\t\tselectedAccount = accounts[0];\n\t\t\tconsole.log(`Selected account changed to ${selectedAccount}`);\n\t\t});\n\t}\n\n\tconst web3 = new Web3(provider);\n\n\tconst networkId = await web3.eth.net.getId();\n\n\t// nftContract = new web3.eth.Contract(\n\t// \tNFTContractBuild.abi,\n\t// \tNFTContractBuild.networks[networkId].address\n\t// );\n\n\t\n\n\n\tconst erc20Abi = [\n\t\t{\n\t\t\tconstant: true,\n\t\t\tinputs: [\n\t\t\t\t{\n\t\t\t\t\tname: '_owner',\n\t\t\t\t\ttype: 'address'\n\t\t\t\t}\n\t\t\t],\n\t\t\tname: 'balanceOf',\n\t\t\toutputs: [\n\t\t\t\t{\n\t\t\t\t\tname: 'balance',\n\t\t\t\t\ttype: 'uint256'\n\t\t\t\t}\n\t\t\t],\n\t\t\tpayable: false,\n\t\t\tstateMutability: 'view',\n\t\t\ttype: 'function'\n\t\t}\n\t];\n\n\tconst requestabi = [{\n\t\tinputs: [\n\t\t\t{\n\t\t\t\t\"internalType\": \"string\",\n\t\t\t\t\"name\": \"_gameID\",\n\t\t\t\t\"type\": \"string\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"internalType\": \"uint256\",\n\t\t\t\t\"name\": \"_amount\",\n\t\t\t\t\"type\": \"uint256\"\n\t\t\t}\n\t\t],\n\t\tname: \"requestMint\",\n\t\toutputs: [],\n\t\tstateMutability: \"nonpayable\",\n\t\ttype : \"function\"\n\t}]\n\n\terc20Contract = new web3.eth.Contract(\n\t\terc20Abi,\n\t\t// Dai contract on Rinkeby\n\t\t'0x5592ec0cfb4dbc12d3ab100b257153436a1f0fea'\n\t);\n\n\trequestContract = new web3.eth.Contract(\n\t\trequestabi, '0xa2dcf71C4a85EBA1d62eAc9EBfFC610291b80f37'\n\t);\n\n\tisInitialized = true;\n};\n\nexport const getOwnBalance = async () => {\n\tif (!isInitialized) {\n\t\tawait init();\n\t}\n\n\treturn erc20Contract.methods\n\t\t.balanceOf(selectedAccount)\n\t\t.call()\n\t\t.then((balance) => {\n\t\t\treturn Web3.utils.fromWei(balance);\n\t\t});\n};\n\nexport const mintToken = async () => {\n\tif (!isInitialized) {\n\t\tawait init();\n\t}\n\n\treturn nftContract.methods\n\t\t.mint(selectedAccount)\n\t\t.send({ from: selectedAccount });\n};\n\nexport const requestMint = async () => {\n\tif (!isInitialized) {\n\t\tawait init();\n\t}\n\n\treturn requestContract.methods\n\t\t.requestMint(\"bbb\", 10)\n\t\t.send({from: selectedAccount});\n}\n\nexport const requestMint2 = async (gameID, amount) => {\n\tif (!isInitialized) {\n\t\tawait init();\n\t}\n\n\treturn requestContract.methods\n\t\t.requestMint(gameID, amount)\n\t\t.send({from: selectedAccount});\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}